version: '3'
volumes:
  postgres_data: {}

services:
  web:
    build:
      context: .
      dockerfile: ./docker/staging/app/Dockerfile
    env_file:
      .staging.env
    command: bin/web
    volumes:
      - gems:/gems
      - storage:/storage
    depends_on:
      - db
      - redis

  # box:
  #   image: busybox
  #   volumes:
  #     - /box

  check_emails:
    build:
      context: .
      dockerfile: ./docker/staging/app/Dockerfile
    env_file:
      .staging.env
    command: bin/check_emails
    volumes:
      - gems:/gems
    depends_on:
      - db
      - web

  worker:
    build:
      context: .
      dockerfile: ./docker/staging/app/Dockerfile
    env_file:
      .staging.env
    command: bin/worker
    volumes:
      - gems:/gems
    depends_on:
      - db
      - redis
      - web


  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis

  nginx:
    build:
      context: .
      dockerfile: ./docker/staging/nginx/Dockerfile
    depends_on:
      - web
    restart: on-failure
    ports:
      - 80:80

volumes:
  gems:
  storage:
  postgres_data:

# docker-compose up -d
# docker-compose down

# docker-compose up -d --no-deps --build web

# Access the container:
#   docker exec -it midilab_web_1_e54a4bb5279f /bin/sh
